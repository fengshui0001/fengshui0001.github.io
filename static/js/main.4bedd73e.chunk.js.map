{"version":3,"sources":["logo.svg","db.js","App.js","chatlist.js","chat.js","serviceWorker.js","index.js"],"names":["module","exports","messages","id","content","createdAt","Date","now","chats","name","picture","lastMessage","find","m","routes","path","exact","sidebar","main","map","chat","key","src","alt","Fragment","moment","format","useStyles","makeStyles","root","background","SidebarExample","useState","style","setStyle","fetch","then","res","json","classes","React","value","setValue","display","padding","width","listStyleType","to","mystyle","version","flex","route","index","children","BottomNavigation","onChange","event","newValue","showLabels","className","BottomNavigationAction","label","icon","component","Link","App","console","log","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4bedd73e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","export const messages = [\r\n    {\r\n        id: '1',\r\n        content: 'You on your way?',\r\n        createdAt: new Date(Date.now() - 60 * 1000 * 1000),\r\n    },\r\n    {\r\n        id: '2',\r\n        content: \"Hey, it's me\",\r\n        createdAt: new Date(Date.now() - 2 * 60 * 1000 * 1000),\r\n    },\r\n    {\r\n        id: '3',\r\n        content: 'I should buy a boat',\r\n        createdAt: new Date(Date.now() - 24 * 60 * 1000 * 1000),\r\n    },\r\n    {\r\n        id: '4',\r\n        content: 'This is wicked good ice cream.',\r\n        createdAt: new Date(Date.now() - 14 * 24 * 60 * 1000 * 1000),\r\n    },\r\n];\r\nexport const chats = [\r\n    {\r\n        id: '1',\r\n        name: 'Ethan Gonzalez',\r\n        picture: 'https://randomuser.me/api/portraits/thumb/men/1.jpg',\r\n        lastMessage: messages.find(m => m.id === '1'),\r\n    },\r\n    {\r\n        id: '2',\r\n        name: 'Bryan Wallace',\r\n        picture: 'https://randomuser.me/api/portraits/thumb/men/2.jpg',\r\n        lastMessage: messages.find(m => m.id === '2'),\r\n    },\r\n    {\r\n        id: '3',\r\n        name: 'Avery Stewart',\r\n        picture: 'https://randomuser.me/api/portraits/thumb/women/1.jpg',\r\n        lastMessage: messages.find(m => m.id === '3'),\r\n    },\r\n    {\r\n        id: '4',\r\n        name: 'Katie Peterson',\r\n        picture: 'https://randomuser.me/api/portraits/thumb/women/2.jpg',\r\n        lastMessage: messages.find(m => m.id === '4'),\r\n    },\r\n];\r\n","import React,{ useState, useEffect }  from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport chat from './chat';\nimport chatlist from './chatlist';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport RestoreIcon from '@material-ui/icons/Restore';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\n\nconst routes = [\n  {\n    path: \"/\",\n    exact: true,\n    sidebar: () => <div>home!</div>,\n    main: () => <h2>Home</h2>\n  },\n  {\n    path: \"/bubblegum\",\n    sidebar: () => <div>bubblegum!</div>,\n    main: () => chatlist()\n  },\n  {\n    path: \"/shoelaces\",\n    sidebar: () => <div>shoelaces!</div>,\n    main: ()=>chat()\n  }\n];\n\nconst useStyles = makeStyles({\n  root: {\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n  },\n});\n\n\nfunction SidebarExample() {\n  const [ style, setStyle ] = useState({})\n  fetch(\"mydata.json\")\n              .then(res => res.json())\n              .then(setStyle)\n\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n    return (\n\n      <Router>\n\n\n        <div style={{ display: \"flex\" }}>\n          <div\n              style={{\n                padding: \"10px\",\n                width: \"40%\",\n                background: \"#f0f0f0\"\n              }}\n          >\n            <ul style={{ listStyleType: \"none\", padding: 0 }}>\n              <li>\n                <Link to=\"/\">Home</Link>\n              </li>\n              <li>\n                <Link to=\"/bubblegum\">chatlist</Link>\n              </li>\n              <li>\n                <Link to=\"/shoelaces\">Shoelaces</Link>\n              </li>\n              <li>\n                <Link to=\"/\">....{style.mystyle}</Link>\n              </li>\n            </ul>\n            <div>{style.version}</div>\n\n\n          </div>\n\n          <div style={{ flex: 1, padding: \"10px\" }}>\n            <Switch>\n              {routes.map((route, index) => (\n                  // Render more <Route>s with the same paths as\n                  // above, but different components this time.\n                  <Route\n                      key={index}\n                      path={route.path}\n                      exact={route.exact}\n                      children={<route.main />}\n                  />\n              ))}\n            </Switch>\n          </div>\n        </div>\n\n        <BottomNavigation\n            value={value}\n            onChange={(event, newValue) => {\n              setValue(newValue);\n            }}\n            showLabels\n            className={classes.root}\n        >\n          <BottomNavigationAction label=\"Recents\" icon={<RestoreIcon />} component={Link} to=\"/\"/>\n          <BottomNavigationAction label=\"Favorites\" icon={<FavoriteIcon />} component={Link} to=\"/bubblegum\"/>\n          <BottomNavigationAction label=\"Nearby\" icon={<LocationOnIcon />} component={Link} to=\"/shoelaces\"/>\n        </BottomNavigation>\n\n      </Router>\n  );\n}\n\n\n\n\nfunction App() {\n  console.log('testdddddd')\n  return (\n\n     <SidebarExample/>\n\n  );\n}\n\nexport default App;\n","import React,{ useState, useEffect }  from 'react';\r\nimport {chats} from './db';\r\nimport moment from 'moment';\r\n\r\nexport default function chatlist() {\r\n    return(\r\n        <div>\r\n            <ul>\r\n\r\n                {chats.map(chat => (\r\n                    <li key={chat.id}>\r\n                        <img src={chat.picture} alt=\"Profile\" />\r\n                        <div>{chat.name}</div>\r\n                        {chat.lastMessage && (\r\n                            <React.Fragment>\r\n                                <div>{chat.lastMessage.content}</div>\r\n                                <div>{moment(chat.lastMessage.createdAt).format('HH:mm')}</div>\r\n                            </React.Fragment>\r\n                            )}\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n","import React,{ useState, useEffect }  from 'react';\r\n\r\n\r\nexport default function chat() {\r\n    return(\r\n        <div>\r\n            <ul>\r\n                <li>\r\n                    <img src=\"https://randomuser.me/api/portraits/thumb/men/1.jpg\" alt=\"Profile\"/>\r\n                    <div>Ethan Gonzalez</div>\r\n                    <div>You on your way?</div>\r\n                    <div>10:25</div>\r\n                </li>\r\n                <li>\r\n                    <img src=\"https://randomuser.me/api/portraits/thumb/men/2.jpg\" alt=\"Profile\"/>\r\n                    <div>Bryan Wallace</div>\r\n                    <div>Hey, it's me</div>\r\n                    <div>13:27</div>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}